{"version":3,"sources":["../../../inline/dropdown/dropdown.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAO,MAAA,EAAQ,YAAA,EAAa,MAAM,eAAA,CAAgB;AAIrE;IAAA;QACG,SAAI,GAAW,EAAE,CAAC;QAClB,YAAO,GAAgD,EAAE,CAAC;QAE1D,gBAAW,GAAW,EAAE,CAAC;QAEzB,kBAAa,GAAyB,IAAI,YAAY,EAAU,CAAC;IAuCpE,CAAC;IArCQ,sCAAU,GAAjB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,YAAY,KAAK,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC;IACH,CAAC;IAEM,oCAAQ,GAAf,UAAgB,MAAc;QAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IACI,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,4WAST;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,gCAAc,GAA2C;QAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC1B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACjC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KACnC,CAAC;IACF,wBAAC;CA7CD,AA6CC,IAAA;SA7CY,iBAAiB","file":"dropdown.js","sourceRoot":"","sourcesContent":["import {Component, Input, Output, EventEmitter} from '@angular/core';\n\n\n\nexport class DropdownComponent {\n   name: string = '';\n   options: string[] | ((selected: string) => string[]) = [];\n   selected: string;\n   placeholder: string = '';\n\n   optionChanged: EventEmitter<string> = new EventEmitter<string>();\n\n  public getOptions(): string[] {\n    if (this.options instanceof Array) {\n      return this.options;\n    }\n    else {\n      return this.options(this.selected);\n    }\n  }\n\n  public onChange(option: string): void {\n      this.optionChanged.emit(option);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'dropdown',\n  template: `\n    <select [(ngModel)]=\"selected\" name=\"drop-down\" (change)=\"onChange(selected)\" >\n      <option *ngIf=\"placeholder && !selected\" [ngValue]=\"undefined\" disabled>\n        {{placeholder}}\n      </option>\n      <option *ngFor=\"let option of getOptions()\" name=\"option\" [value]=\"option\">\n        {{option}}\n      </option>\n    </select>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'options': [{ type: Input },],\n'selected': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'optionChanged': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}