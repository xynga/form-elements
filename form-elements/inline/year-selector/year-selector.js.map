{"version":3,"sources":["../../../inline/year-selector/year-selector.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAO,MAAA,EAAQ,YAAA,EAAa,MAAM,eAAA,CAAgB;AAOrE,IAAM,QAAA,GAAmB,eAAA,CAAgB;AAGzC;IAAA;QAEG,UAAK,GAAW,EAAE,CAAC;QACnB,yBAAoB,GAAW,SAAS,CAAC;QAEzC,gBAAW,GAAuB,IAAI,YAAY,EAAQ,CAAC;IA2B9D,CAAC;IAzBQ,wCAAQ,GAAf,UAAgB,IAAU;QACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IACI,gCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,QAAQ;oBAClB,QAAQ,EAAE,4VAOT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,oCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,oCAAc,GAA2C;QAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC1B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,sBAAsB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC1C,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KACjC,CAAC;IACF,4BAAC;CAhCD,AAgCC,IAAA;SAhCY,qBAAqB","file":"year-selector.js","sourceRoot":"","sourcesContent":["import {Component, Input, Output, EventEmitter} from '@angular/core';\n\n// Externalized (polyglot) text values for field labels, input placeholders, button text\n// screen reader text, page headings, user instructions, help messages, menu uploads, etc\n\nexport type Year = string;\n\nconst SELECTOR: string = 'year-selector';\n\n\nexport class YearSelectorComponent{\n   year: Year;\n   years: Year[] = [];\n   customSelectModifier: string = 'stacked';\n\n   yearChanged: EventEmitter<Year> = new EventEmitter<Year>();\n\n  public onChange(year: Year): void {\n    this.yearChanged.emit(year);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: SELECTOR,\n  template: `\n\n\n      <span *ngIf=\"1 === years.length\">{{years[0]}}</span>\n      <select *ngIf=\"1 < years.length\" id=\"year_select\" name=\"year_select\" (change)=\"onChange(year)\" [(ngModel)]=\"year\" >\n        <option *ngFor=\"let option of years\" [value]=\"option\" [label]=\"option\" [selected]=\"option == year\"></option>\n      </select>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'year': [{ type: Input },],\n'years': [{ type: Input },],\n'customSelectModifier': [{ type: Input },],\n'yearChanged': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}